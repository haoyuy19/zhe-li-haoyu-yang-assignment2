(this.webpackJsonpempty=this.webpackJsonpempty||[]).push([[0],{36:function(e,t,n){"use strict";n.r(t);var i,s,r=n(1),a=n(0),o=n.n(a),l=n(14),c=n.n(l),h=n(7),d=n(8),u=n(10),p=n(9),j=n(18),b=n(3),g=function(e){Object(u.a)(n,e);var t=Object(p.a)(n);function n(){var e;Object(h.a)(this,n);for(var i=arguments.length,s=new Array(i),r=0;r<i;r++)s[r]=arguments[r];return(e=t.call.apply(t,[this].concat(s))).updateCell=function(){e.props.updateCell(e.props.row,e.props.col)},e}return Object(d.a)(n,[{key:"render",value:function(){var e={display:"inline-block",border:"2px solid gray",width:"15px",height:"15px",backgroundColor:this.props.status?"white":"black"};return Object(r.jsx)("div",{style:e,className:"cell",onClick:this.updateCell})}}]),n}(o.a.Component),v=function(e){Object(u.a)(n,e);var t=Object(p.a)(n);function n(){return Object(h.a)(this,n),t.apply(this,arguments)}return Object(d.a)(n,[{key:"render",value:function(){var e;e=this.props.aliveness;var t={display:"inline-block",border:"2px solid gray",width:"15px",height:"15px",background:"rgba(255, 0, 0, ".concat(e,")")};return Object(r.jsx)("div",{style:t,className:"cell",onClick:this.updateCell})}}]),n}(o.a.Component),O=function(e){Object(u.a)(n,e);var t=Object(p.a)(n);function n(){return Object(h.a)(this,n),t.apply(this,arguments)}return Object(d.a)(n,[{key:"render",value:function(){for(var e,t=19*this.props.cols,n={height:19*this.props.rows,width:t,lineHeight:"0",margin:"auto",boxShadow:"0px 0px 20px white",marginTop:"20px"},i=[],s=0;s<this.props.rows;s++)for(var a=0;a<this.props.cols;a++){e=this.props.grid[s][a];var o=this.props.aliveness[s][a];this.props.isheat?i.push(Object(r.jsx)(v,{status:e,aliveness:o,row:s,col:a})):i.push(Object(r.jsx)(g,{status:e,aliveness:o,row:s,col:a,updateCell:this.props.updateCell}))}return Object(r.jsx)("div",{style:n,children:i})}}]),n}(o.a.Component),f=n.p+"static/media/example.5185e873.gif",x=function(e){Object(u.a)(n,e);var t=Object(p.a)(n);function n(){return Object(h.a)(this,n),t.call(this)}return Object(d.a)(n,[{key:"render",value:function(){var e={textAlign:"left"},t={textAlign:"left"};return Object(r.jsxs)("div",{children:[Object(r.jsx)("img",{src:f}),Object(r.jsxs)("p",{style:e,children:["Conway\u2019s Game of Life (henceforth, Life) is based on a grid system. Every individual location on the grid can be understood as a cell. The game, or simulation, occurs over iterations, or generations. After a generation, a cell may change from living or dead based on how many living or dead neighbors it had in a previous iteration. A neighbor is any immediately adjacent spot on the grid (horizontal, vertical or diagonal). We can understand this more clearly with an example and a clear demonstration of the rules.",Object(r.jsxs)("a",{href:"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life",children:["  ","Read more."]})]}),Object(r.jsx)("p",{style:e,children:"Rules For Life:"}),Object(r.jsxs)("ol",{style:t,children:[Object(r.jsx)("li",{children:"A living cell with less than two living neighbours dies."}),Object(r.jsx)("li",{children:"A living cell with two or three live neighbours lives."}),Object(r.jsx)("li",{children:"A living cell with more than three live neighbours dies."}),Object(r.jsx)("li",{children:"A dead cell with exactly three live neighbours becomes a live cell, as if by reproduction."})]}),Object(r.jsx)("p",{style:e,children:"User Guide:"}),Object(r.jsxs)("ol",{style:t,children:[Object(r.jsx)("li",{children:"User can set the width and height for the game board. The smallest possible grid should be 10 X 10 and the biggest possible grid should be 100 X 100."}),Object(r.jsx)("li",{children:"Click initial to generate a random set of cells."}),Object(r.jsx)("li",{children:"Click next to see the next generation."}),Object(r.jsx)("li",{children:"Click start to start the simulation."}),Object(r.jsx)("li",{children:"Click pause to pause the simulation. User can click any cell To reverse its state. For instance, if a cell is dead and a user clicks on it, it should be marked as a live."}),Object(r.jsx)("li",{children:"Click clear to reset the grid."}),Object(r.jsx)("li",{children:"Click Show Heat Map to see how recently a grid was alive. When a cell is currently alive, it should be red. When a cell has been dead for 10 or more iterations, it should be white. The lighter the shade, the more acient the cell."}),Object(r.jsx)("li",{children:"Click Show Game Board to go back to the game environment."}),Object(r.jsx)("li",{children:"User can input the frequency of updates to this simulation at the speed of choice. The frequency of a generation can be between 50 to 2000ms. This value can only be set when the simulation is NOT running."})]}),Object(r.jsx)("a",{href:"/",children:"Back to game"})]})}}]),n}(o.a.Component),m=n(13),y=300,C=function(e){Object(u.a)(n,e);var t=Object(p.a)(n);function n(e){var a;if(Object(h.a)(this,n),(a=t.call(this,e)).updateCell=function(e,t){var n=JSON.parse(JSON.stringify(a.state.grid)),i=JSON.parse(JSON.stringify(a.state.aliveness)),s=a.state.livingcells;n[e][t]=!n[e][t],n[e][t]?s+=1:s-=1,a.setState({grid:n,aliveness:i,livingcells:s})},a.increment=function(){a.props.dispatch({type:"INCREMENT"})},a.reset=function(){a.props.dispatch({type:"RESET"}),console.log("0000000000000000000")},a.init=function(){a.clear();for(var e=JSON.parse(JSON.stringify(a.state.grid)),t=JSON.parse(JSON.stringify(a.state.aliveness)),n=0,r=0;r<s;r++)for(var o=0;o<i;o++)e[r][o]=!1,t[r][o]=0,Math.random()<=.05&&(e[r][o]=!0,t[r][o]=1,n++,console.log("++++++++++++++++++++++++++++++"));a.increment(),a.setState({grid:e,aliveness:t,livingcells:n})},a.clear=function(){var e=JSON.parse(JSON.stringify(a.state.grid)),t=JSON.parse(JSON.stringify(a.state.aliveness));a.reset();for(var n=0;n<s;n++)for(var r=0;r<i;r++)e[n][r]=!1,t[n][r]=0;a.setState({grid:e,aliveness:t,livingcells:0})},a.pause=function(){clearInterval(a.intervalId),a.setState({paused:!0})},a.play=function(){clearInterval(a.intervalId),a.setState({paused:!1}),a.intervalId=null!=y?setInterval(a.next,y):setInterval(a.next,a.state.speed)},a.next=function(){for(var e=!1,t=0,n=a.state.livingcells,r=JSON.parse(JSON.stringify(a.state.grid)),o=JSON.parse(JSON.stringify(a.state.aliveness)),l=0;l<s;l++)for(var c=0;c<i;c++)l>0&&1==r[l-1][c]&&t++,c>0&&1==r[l][c-1]&&t++,c>0&&l>0&&1==r[l-1][c-1]&&t++,l<s-1&&1==r[l+1][c]&&t++,c<i-1&&1==r[l][c+1]&&t++,l<s-1&&c<i-1&&1==r[l+1][c+1]&&t++,l>0&&c<i-1&&1==r[l-1][c+1]&&t++,l<s-1&&c>0&&1==r[l+1][c-1]&&t++,1!=r[l][c]?0!=r[l][c]||(o[l][c]=o[l][c]-.1>0?o[l][c]-.1:0,3==t&&(e=!0,r[l][c]=!0,o[l][c]=1,n+=1,console.log("bring back one")),t=0):(2==t||3==t?(r[l][c]=!0,o[l][c]=1):(e=!0,r[l][c]=!1,o[l][c]=.9,n-=1,console.log("KILL ONE")),t=0);console.log(n),e&&a.increment(),a.setState({grid:r,aliveness:o,livingcells:n}),e||a.pause()},a.turnon=function(){clearInterval(a.intervalId),a.setState({paused:!0}),a.props.dispatch({type:"HEAT"}),console.log("DISPATH MADE!!!!!!!!!"),console.log(a.props.count)},a.turnoff=function(){clearInterval(a.intervalId),a.setState({paused:!0}),a.props.dispatch({type:"GAME"}),console.log("DISPATH MADE???????"),console.log(a.props.count)},a.outofbound=function(){return i>=10&&i<=100&&s>=10&&s<=100?Object(r.jsx)(O,{grid:a.state.grid,aliveness:a.state.aliveness,rows:s,cols:i,isheat:a.props.heatmapon,updateCell:a.updateCell}):Object(r.jsxs)("div",{children:[" ","Your input is out of bound (valid input should between 10 - 100)"]})},a.myChangeHandlerspeed=function(e){y=e.target.value,a.setState({speed:y})},a.enterSpeed=function(){return a.state.paused?Object(r.jsxs)("div",{children:[Object(r.jsx)("p",{children:"Speed of your choice (50 - 2000)"}),Object(r.jsx)("input",{type:"text",onChange:a.myChangeHandlerspeed})]}):Object(r.jsxs)("div",{children:[Object(r.jsx)("p",{children:"Current speed"}),Object(r.jsx)("div",{dangerouslySetInnerHTML:{__html:y}})]})},null!=a.props.m)for(var o=0;o<=100;o++)o==a.props.m&&(i=o);else i=50;if(null!=a.props.n)for(var l=0;l<=100;l++)l==a.props.n&&(s=l);else s=30;return console.log(i+" "+s),a.state={speed:300,paused:!0,livingcells:0,grid:Array(s).fill().map((function(){return Array(i).fill(!1)})),aliveness:Array(i).fill().map((function(){return Array(i).fill(0)})),outofbound:!1},a}return Object(d.a)(n,[{key:"componentDidMount",value:function(){this.enterSpeed}},{key:"render",value:function(){var e={margin:"20px"};return console.log(this.props.count),Object(r.jsxs)("div",{children:[Object(r.jsxs)("h2",{children:["Generations:"," ",this.props.count]}),Object(r.jsxs)("p",{children:["Living Cells:"," "+this.state.livingcells]}),Object(r.jsx)(this.outofbound,{}),Object(r.jsx)("button",{style:e,type:"button",onClick:this.init,children:"initial"}),Object(r.jsx)("button",{style:e,type:"button",onClick:this.next,children:"next"}),Object(r.jsx)("button",{style:e,type:"button",onClick:this.play,children:"start"}),Object(r.jsx)("button",{style:e,type:"button",onClick:this.pause,children:"pause"}),Object(r.jsx)("button",{style:e,type:"button",onClick:this.clear,children:"clear"}),Object(r.jsx)("button",{style:e,type:"button",onClick:this.turnon,children:"Show Heat Map"}),Object(r.jsx)("button",{style:e,type:"button",onClick:this.turnoff,children:"Show Game Board"}),Object(r.jsx)(this.enterSpeed,{})]})}}]),n}(o.a.Component);var S,w,k=Object(m.b)((function(e){return{heatmapon:e.heatmapon,count:e.count,generation:e.generation}}))(C),N=function(e){Object(u.a)(n,e);var t=Object(p.a)(n);function n(e){var i;return Object(h.a)(this,n),(i=t.call(this,e)).myChangeHandlerform=function(e){S=e.target.value,i.setState({m:S})},i.myChangeHandlerforn=function(e){w=e.target.value,i.setState({n:e.target.value})},i.onsubmitm=function(e){i.setState.m({m:e})},i.onsubmitn=function(e){i.setState.n({n:e})},i.state={m:0},i.state={n:0},i}return Object(d.a)(n,[{key:"render",value:function(){return Object(r.jsxs)("form",{style:{margin:"auto",justifyContent:"center",alignContent:"center",textAlign:"center"},children:[Object(r.jsx)("h1",{children:"Conways History of Life"}),Object(r.jsx)("div",{children:Object(r.jsx)(j.a,{children:Object(r.jsxs)(b.c,{children:[Object(r.jsxs)(b.a,{exact:!0,path:"/",component:n,children:[Object(r.jsx)("p",{children:"Enter width:"}),Object(r.jsx)("input",{type:"text",onChange:this.myChangeHandlerform}),Object(r.jsx)("p",{children:"Enter height:"}),Object(r.jsx)("input",{type:"text",onChange:this.myChangeHandlerforn}),Object(r.jsx)("div",{children:Object(r.jsx)("button",{style:{margin:"5px"},children:Object(r.jsx)(j.b,{to:"/grid",children:" Submit "})})}),Object(r.jsx)("div",{children:Object(r.jsx)("p",{children:Object(r.jsxs)(j.b,{to:"/intro",children:[" ","Game Introduction"," "]})})})]}),Object(r.jsx)(b.a,{path:"/grid",component:k,children:Object(r.jsx)(k,{n:w,m:S})}),Object(r.jsx)(b.a,{path:"/intro",component:x,children:Object(r.jsx)(x,{})})]})})}),Object(r.jsx)("div",{})]})}}]),n}(o.a.Component);var A=Object(m.b)((function(e){return{heatmapon:e.heatmapon}}))(N),E=n(15),I={heatmapon:!1,count:0};var J=Object(E.b)((function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:I,t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"HEAT":return{heatmapon:!0,count:e.count};case"GAME":return{heatmapon:!1,count:e.count};case"INCREMENT":return{count:e.count+1};case"RESET":return{count:0};default:return e}}));console.log(J.getState()),c.a.render(Object(r.jsx)(o.a.StrictMode,{children:Object(r.jsx)(m.a,{store:J,children:Object(r.jsx)(A,{})})}),document.getElementById("root"))}},[[36,1,2]]]);
//# sourceMappingURL=main.bdef68f6.chunk.js.map